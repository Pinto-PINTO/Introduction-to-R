B <- 5
X = 6
print("Hello Pinto")
print (1:10)
# 5 - Help from R (use ?)
?mean
help(mean)
# 5 - Help from R (use ? or help())
?mean
help(solve)
# 6 - Install new packages
install.packages("ggplot2")
# 7 - Enabling the package that you installed
library(ggplot2)
# 8 - Operators
5+5
12-3
4-6
A = 12
B = 7
A-B
Ans
A = 12
B = 7
Ans = A-B   # will produce result 5
Ans
A = 12
B = 7
Ans = A*B
Ans
2^2    #power (2 to the power 2)
2**3   #power (2 to the power 3)
9%%4   #modulous
9%/%4
A = 10
B = 2
A<B
A<=B
A>B
A>=B
A==B
A!=B
!(A>B)
A = 10
B = 2
A<B
A<=B
A>B
A>=B
A==B
A!=B
!(A>B)
var1 = A < B
var2 = A > B
isTRUE(A > B)
vec1 = c(100, 25, 12, 1)
class(vec1)
vec2 = c("Ben", "Josh", "Lop")
class(vec2)
data = list("Red", "Blue", c(23, 19, 7), TRUE, 15.4)
class(data)
Z = matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = FALSE)
z = matrix(c(1,2,3,4))  #notes the elements in the matrix
Z = matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = FALSE)
Z <- matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = FALSE)   #byrow = false, means fills the matrix column wise
vector1 = c ("Jan", "June", "April")
class(vector1)  #Character Vector
months = factor(vector1)
class(months)
levels(months)
table(months)   #get values into tables
vector2 = c(111,555,222,222,222,222,111,555,555)
vector3 = c(5,2,6,10,7,1,50,9,4)
vector4 = c(120,60,60,1000,50,58,89,89,40)
fruit = factor(vector2)
amount = factor(vector3)
price = factor(vector4)
levels(fruit)
levels(amount)
levels(price)
table(fruit)
table(amount)
table(price)
vector2 = c(111,555,222,222,222,222,111,555,555)
vector3 = c(5,2,6,10,7,1,50,9,4)
vector4 = c(120,60,60,1000,50,58,89,89,40)
fruit = factor(vector2, c(111,222,555), c("Apple","Maongo","Orange"))
amount = factor(vector3)
price = factor(vector4)
levels(fruit)
levels(amount)
levels(price)
table(fruit)
table(amount)
table(price)
ID = c('A01','A02','A03','A04')
Marks = c(100,99,98,75)
Gender = c("Male","Female","Female","Male")
#data_set is the name of the data frame
data_set = data.frame(ID,Marks,Gender)
data_set
Z <- matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = FALSE)
p = -1
while (p<10){
print(p)
p = p+1
}
2:100
for (x in 2:100){
print(x)
}
getwd()
getwd()
setwd("C://Users//R E V O//Pictures//Y2 S2//Probability & Statistics (PS) - CSIT2110//Practicals//Lab2")
data_2 = read.csv("DATA 2.csv", header = TRUE)
data_2
fix(data_2)
Name = c("Kamal","Nimal","Saman")
Marks = c(85, 89, 90)
mark_info = data.frame(Name,Marks)
Name = c("Kamal","Nimal","Saman")
Marks = c(85, 89, 90)
mark_info = data.frame(Name,Marks)
# 2. Writing the above into a .txt file
write.table(mark_info, file="PSMarks.txt")
write.table(mark_info, file="PSMarks.csv")
func_1 = function(a,b){
y = a + b
print(y)
}
func_1(8,7)
quadRoot = function(a,b,c){
x1 = (-b + sqrt((b^2)-4*a*c))/(2*a)
print(x1)
x2 = (-b - sqrt((b^2)-4*a*c))/(2*a)
print(x2)
}
quadRoot(1,5,-2)
quadRoot = function(a,b,c){
x1 = (-b + sqrt((b^2)-4*a*c))/(2*a)
print(x1)
x2 = (-b - sqrt((b^2)-4*a*c))/(2*a)
print(x2)
}
quadRoot(1,5,25)
quadRoot = function(a,b,c){
x1 = (-b + sqrt((b^2)-4*a*c))/(2*a)
print(x1)
x2 = (-b - sqrt((b^2)-4*a*c))/(2*a)
print(x2)
}
quadRoot(1,5,-2)
vec_1 = c(1:20)
vec_1 %%3 == 0
sum(vec_1 %%3 == 0)
x = c(1,2,3,4,5)
max = 0
for (i in x){
if(x[i] > max){
max = x[i]
}
}
print(max)
while.max(x) # there is an in-built function in R
which.max(x)
MoneyOwed = function(P,R,n){
for(i in 1:15){
A = P * (1 + (R/100))^n
print(A)
}
}
MoneyOwed(5000,11.5,15)
A = P * (1 + (R/100))^n
A = 0
MoneyOwed = function(P,R,n){
for(i in 1:15){
A = P * (1 + (R/100))^n
print(A)
}
}
MoneyOwed(5000,11.5,15)
A = P * ((1 + (R/100))^i)
A = 0
MoneyOwed = function(P,R,n){
for(i in 1:15){
A = P * ((1 + (R/100))^i)
print(A)
}
}
MoneyOwed(5000,11.5,15)
